{"version":3,"sources":["components/Title/nasa.png","utils.js","components/Title/Title.js","components/DateSelector/DateSelector.js","components/Picture/Picture.js","components/Video/Video.js","App.js","reportWebVitals.js","index.js"],"names":["detectDevice","width","window","screen","Title","props","visible","handleIconClick","userDevice","Container","className","Row","Col","xs","md","Image","onClick","src","nasaPic","alt","DaySelector","getDateInfo","resetDatePicker","onClickRefresh","useState","date","setDate","useEffect","lg","Form","Control","onChange","event","target","value","type","placeholder","Button","variant","disabled","block","Picture","pictureInfo","title","explanation","url","rounded","Video","App","nasaInfo","setNasaInfo","setVisible","errorVisible","setErrorVisible","errorResponse","setErrorResponse","setOnClickRefresh","baseURL","key","getNasaInfo","fetch","method","then","response","json","parsedResponse","catch","error","console","log","fluid","code","msg","Alert","transition","onClose","dismissible","Heading","media_type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iWAAe,MAA0B,iC,QCAnCA,G,MAAe,WACnB,IAAMC,EAAQC,OAAOC,OAAOF,MAC5B,OAAIA,GAAS,IACJ,SACEA,EAAQ,KAAOA,GAAS,KAC1B,SACEA,EAAQ,KACV,eADF,I,OC4CMG,MA7Cf,SAAeC,GAAQ,IACbC,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,gBACXC,EAAaR,IAEnB,OACE,cAACS,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,GAAI,GACJC,GAAI,EACJJ,UACGJ,EAAiC,0BAAvB,qBAJf,SAOE,cAACS,EAAA,EAAD,CACEC,QAAST,EACTU,IAAKC,EACLC,IAAI,OACJT,UAAU,eAGd,cAACE,EAAA,EAAD,CACEC,GAAI,GACJC,GAAI,EACJJ,UACiB,WAAfF,GAA0C,YAAfA,EACvB,eACA,GANR,SASE,oBACEE,UACiB,WAAfF,GAA0C,YAAfA,EACvB,kBACA,GAJR,kD,sBCoBKY,MAlDf,SAAqBf,GAAQ,IACnBgB,EAAiDhB,EAAjDgB,YAAaC,EAAoCjB,EAApCiB,gBAAiBC,EAAmBlB,EAAnBkB,eADZ,EAEFC,mBAAS,IAFP,mBAEnBC,EAFmB,KAEbC,EAFa,KAwB1B,OAZAC,qBAAU,WACJL,GACFI,EAAQ,MAET,CAACJ,IAEJK,qBAAU,WACJJ,GACFG,EAAQ,MAET,CAACH,IAGF,cAACd,EAAA,EAAD,CAAWC,UAAU,iBAArB,SACE,eAACC,EAAA,EAAD,CAAKD,UAAU,YAAf,UACE,cAACE,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGc,GAAI,EAAvB,SACE,cAACC,EAAA,EAAKC,QAAN,CACEC,SAzBiB,SAACC,GAC1BN,EAAQM,EAAMC,OAAOC,QAyBbC,KAAK,OACLD,MAAOT,EACPW,YAAY,kBAGhB,cAACxB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGJ,UAAU,mBAA7B,SACE,cAAC2B,EAAA,EAAD,CACEC,QAAQ,gBACRtB,QA9BS,WACjBK,EAAYI,IA8BJc,UAAWd,EACXe,OAAK,EAJP,4B,MCjBKC,MArBf,SAAiBpC,GAAQ,IACfqC,EAAgBrC,EAAhBqC,YAER,OACE,cAACjC,EAAA,EAAD,CAAWC,UAAU,oBAArB,SACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAIe,GAAI,EAAjB,UACE,sCACGc,QADH,IACGA,OADH,EACGA,EAAaC,MADhB,IACuB,4CAAQD,QAAR,IAAQA,OAAR,EAAQA,EAAajB,KAArB,UAEvB,mBAAGf,UAAU,cAAb,gBAA4BgC,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAaE,iBAG3C,cAAChC,EAAA,EAAD,CAAKC,GAAI,GAAIe,GAAI,EAAGlB,UAAU,oBAA9B,SACE,cAACK,EAAA,EAAD,CAAOE,IAAG,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAaG,IAAKnC,UAAU,gBAAgBoC,SAAO,Y,MCO1DC,MArBf,SAAe1C,GAAQ,IACbqC,EAAgBrC,EAAhBqC,YAER,OACE,cAACjC,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,sCACG6B,QADH,IACGA,OADH,EACGA,EAAaC,MADhB,IACuB,4CAAQD,QAAR,IAAQA,OAAR,EAAQA,EAAajB,KAArB,UAEvB,mBAAGf,UAAU,cAAb,gBAA4BgC,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAaE,iBAG3C,cAAChC,EAAA,EAAD,CAAKC,GAAI,GAAIH,UAAU,mBAAvB,SACE,wBAAQO,IAAKyB,EAAYG,IAAKF,MAAM,kBCgH/BK,MAvHf,WAAgB,IAAD,EACmBxB,mBAAS,IAD5B,mBACNyB,EADM,KACIC,EADJ,OAEiB1B,oBAAS,GAF1B,mBAENlB,EAFM,KAEG6C,EAFH,OAG2B3B,oBAAS,GAHpC,mBAGN4B,EAHM,KAGQC,EAHR,OAI6B7B,mBAAS,IAJtC,mBAIN8B,EAJM,KAISC,EAJT,OAK+B/B,oBAAS,GALxC,mBAKND,EALM,KAKUiC,EALV,KAMPhD,EAAaR,IACbyD,EAAU,+CACVC,EAAM,2CAEZ/B,qBAAU,WACRgC,MACC,IAEH,IAAMA,EAAc,WAGlB,OAFAR,GAAW,GAEJS,MAAMH,EAAUC,EAAK,CAAEG,OAAQ,QACnCC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLf,EAAYe,GACZd,GAAW,GAEPC,GACFC,GAAgB,MAInBa,OAAM,SAAUC,GACfC,QAAQC,IAAIF,OA+ClB,OACE,cAAC1D,EAAA,EAAD,CAAW6D,OAAK,EAAC5D,UAVE,WAAfF,EACK,iBACiB,WAAfA,EACF,iBAEA,kBAKT,SACE,eAACG,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,cAAC,EAAD,CAAOP,QAASA,EAASC,gBAnBT,WACtBoD,IACAH,GAAkB,MAkBZ,cAAC,EAAD,CACElC,iBAAkB8B,EAClB/B,YAlDc,SAACI,GACvB0B,GAAW,GAEXS,MAAMH,EAAUC,EAAV,gBAAyBjC,GAAQ,CAAEoC,OAAQ,QAC9CC,MAAK,SAAUC,GACd,OAAOA,EAASC,UAEjBF,MAAK,SAAUG,GACdf,EAAYe,GACZd,GAAW,GAEiB,MAAxBc,EAAeM,MACjBhB,EAAiBU,EAAeO,KAChCnB,GAAgB,IAEhBA,GAAgB,MAGnBa,OAAM,SAAUC,GACfC,QAAQC,IAAIF,OAgCR5C,eAAgBA,OAGpB,eAACX,EAAA,EAAD,CAAKC,GAAI,GAAIH,UAAU,oBAAvB,UACE,qBAAKA,UAAU,kBAAf,SACE,cAACC,EAAA,EAAD,CAAKD,UAAU,gBAAf,SACE,cAACE,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACGsC,EACC,eAACqB,EAAA,EAAD,CACEnC,QAAQ,SACRoC,YAAY,EACZC,QAvCO,WACvBtB,GAAgB,GAChBM,KAsCgBiB,aAAW,EAJb,UAME,cAACH,EAAA,EAAMI,QAAP,gCACA,4BAAIvB,OAEJ,WAKe,UAAxBL,EAAS6B,WACR,cAAC,EAAD,CAASpC,YAAaO,IACnBG,EAED,KADF,cAAC,EAAD,CAAOV,YAAaO,aC7GjB8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.be52f9a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/nasa.b5bf6358.png\";","const detectDevice = () => {\r\n  const width = window.screen.width\r\n  if (width <= 575) {\r\n    return 'mobile'\r\n  } else if (width > 575 && width <= 1024) {\r\n    return 'tablet'\r\n  } else if (width > 1024) {\r\n    return 'desktop'\r\n  }\r\n}\r\n\r\nexport { detectDevice }\r\n","import nasaPic from './nasa.png'\r\nimport { Container, Row, Col, Image } from 'react-bootstrap'\r\nimport './Title.scss'\r\nimport { detectDevice } from '../../utils.js'\r\n\r\nfunction Title(props) {\r\n  const { visible, handleIconClick } = props\r\n  const userDevice = detectDevice()\r\n\r\n  return (\r\n    <Container className=\"title-container\">\r\n      <Row>\r\n        <Col\r\n          xs={12}\r\n          md={4}\r\n          className={\r\n            !visible ? 'app-logo-container' : 'app-logo-container blur'\r\n          }\r\n        >\r\n          <Image\r\n            onClick={handleIconClick}\r\n            src={nasaPic}\r\n            alt=\"logo\"\r\n            className=\"app-logo\"\r\n          />\r\n        </Col>\r\n        <Col\r\n          xs={12}\r\n          md={8}\r\n          className={\r\n            userDevice === 'tablet' || userDevice === 'desktop'\r\n              ? 'tablet-or-up'\r\n              : ''\r\n          }\r\n        >\r\n          <h1\r\n            className={\r\n              userDevice === 'tablet' || userDevice === 'desktop'\r\n                ? 'h1-tablet-or-up'\r\n                : ''\r\n            }\r\n          >\r\n            Astronomy Picture of the Day\r\n          </h1>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Title\r\n","import { useState, useEffect } from 'react'\r\nimport { Button, Container, Row, Col } from 'react-bootstrap'\r\nimport { Form } from 'react-bootstrap'\r\nimport './DateSelector.scss'\r\n\r\nfunction DaySelector(props) {\r\n  const { getDateInfo, resetDatePicker, onClickRefresh } = props\r\n  const [date, setDate] = useState('')\r\n\r\n  const handleSelectedDate = (event) => {\r\n    setDate(event.target.value)\r\n  }\r\n\r\n  const submitDate = () => {\r\n    getDateInfo(date)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (resetDatePicker) {\r\n      setDate('')\r\n    }\r\n  }, [resetDatePicker])\r\n\r\n  useEffect(() => {\r\n    if (onClickRefresh) {\r\n      setDate('')\r\n    }\r\n  }, [onClickRefresh])\r\n\r\n  return (\r\n    <Container className=\"date-container\">\r\n      <Row className=\"input-row\">\r\n        <Col xs={8} md={6} lg={4}>\r\n          <Form.Control\r\n            onChange={handleSelectedDate}\r\n            type=\"date\"\r\n            value={date}\r\n            placeholder=\"Select Date\"\r\n          />\r\n        </Col>\r\n        <Col xs={4} md={2} className=\"butoon-container\">\r\n          <Button\r\n            variant=\"outline-light\"\r\n            onClick={submitDate}\r\n            disabled={!date}\r\n            block\r\n          >\r\n            Search\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DaySelector\r\n","import './Picture.scss'\r\nimport { Container, Col, Row, Image } from 'react-bootstrap'\r\n\r\nfunction Picture(props) {\r\n  const { pictureInfo } = props\r\n\r\n  return (\r\n    <Container className=\"content-container\">\r\n      <Row>\r\n        <Col xs={12} lg={6}>\r\n          <h4>\r\n            {pictureInfo?.title} <span>({pictureInfo?.date})</span>\r\n          </h4>\r\n          <p className=\"explanation\">{pictureInfo?.explanation}</p>\r\n        </Col>\r\n\r\n        <Col xs={12} lg={6} className=\"picture-container\">\r\n          <Image src={pictureInfo?.url} className=\"selectedImage\" rounded />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Picture\r\n","import { Container, Row, Col } from 'react-bootstrap'\r\nimport './Video.scss'\r\n\r\nfunction Video(props) {\r\n  const { pictureInfo } = props\r\n\r\n  return (\r\n    <Container className=\"video-container\">\r\n      <Row>\r\n        <Col xs={12}>\r\n          <h4>\r\n            {pictureInfo?.title} <span>({pictureInfo?.date})</span>\r\n          </h4>\r\n          <p className=\"explanation\">{pictureInfo?.explanation}</p>\r\n        </Col>\r\n\r\n        <Col xs={12} className=\"iframe-container\">\r\n          <iframe src={pictureInfo.url} title=\"video\"></iframe>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Video\r\n","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.scss'\r\nimport { useEffect, useState } from 'react'\r\nimport { Container, Row, Col, Alert } from 'react-bootstrap'\r\nimport Title from './components/Title/Title.js'\r\nimport DateSelector from './components/DateSelector/DateSelector.js'\r\nimport Picture from './components/Picture/Picture.js'\r\nimport Video from './components/Video/Video.js'\r\nimport { detectDevice } from './utils.js'\r\n\r\nfunction App() {\r\n  const [nasaInfo, setNasaInfo] = useState({})\r\n  const [visible, setVisible] = useState(true)\r\n  const [errorVisible, setErrorVisible] = useState(false)\r\n  const [errorResponse, setErrorResponse] = useState('')\r\n  const [onClickRefresh, setOnClickRefresh] = useState(false)\r\n  const userDevice = detectDevice()\r\n  const baseURL = 'https://api.nasa.gov/planetary/apod?api_key='\r\n  const key = 'lHbDxOJzKgudrE8byarsVEaAvBzmk6VxM8Fg2ELv'\r\n\r\n  useEffect(() => {\r\n    getNasaInfo()\r\n  }, [])\r\n\r\n  const getNasaInfo = () => {\r\n    setVisible(true)\r\n\r\n    return fetch(baseURL + key, { method: 'GET' })\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then((parsedResponse) => {\r\n        setNasaInfo(parsedResponse)\r\n        setVisible(false)\r\n\r\n        if (errorVisible) {\r\n          setErrorVisible(false)\r\n        }\r\n      })\r\n\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const getSelectedDate = (date) => {\r\n    setVisible(true)\r\n\r\n    fetch(baseURL + key + `&date=${date}`, { method: 'GET' })\r\n      .then(function (response) {\r\n        return response.json()\r\n      })\r\n      .then(function (parsedResponse) {\r\n        setNasaInfo(parsedResponse)\r\n        setVisible(false)\r\n\r\n        if (parsedResponse.code === 400) {\r\n          setErrorResponse(parsedResponse.msg)\r\n          setErrorVisible(true)\r\n        } else {\r\n          setErrorVisible(false)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleCloseError = () => {\r\n    setErrorVisible(false)\r\n    getNasaInfo()\r\n  }\r\n\r\n  const handleIconClick = () => {\r\n    getNasaInfo()\r\n    setOnClickRefresh(true)\r\n  }\r\n\r\n  const getAppClass = () => {\r\n    if (userDevice === 'mobile') {\r\n      return 'app app-mobile'\r\n    } else if (userDevice === 'tablet') {\r\n      return 'app app-tablet'\r\n    } else {\r\n      return 'app app-desktop'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid className={getAppClass()}>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Title visible={visible} handleIconClick={handleIconClick} />\r\n          <DateSelector\r\n            resetDatePicker={!errorVisible}\r\n            getDateInfo={getSelectedDate}\r\n            onClickRefresh={onClickRefresh}\r\n          />\r\n        </Col>\r\n        <Col xs={12} className=\"picture-container\">\r\n          <div className=\"alert-container\">\r\n            <Row className=\"alert-message\">\r\n              <Col xs={12} md={8}>\r\n                {errorVisible ? (\r\n                  <Alert\r\n                    variant=\"danger\"\r\n                    transition={true}\r\n                    onClose={handleCloseError}\r\n                    dismissible\r\n                  >\r\n                    <Alert.Heading>You got an error!</Alert.Heading>\r\n                    <p>{errorResponse}</p>\r\n                  </Alert>\r\n                ) : null}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          {nasaInfo.media_type === 'image' ? (\r\n            <Picture pictureInfo={nasaInfo} />\r\n          ) : !errorVisible ? (\r\n            <Video pictureInfo={nasaInfo} />\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}